/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/capa.glb -o src/Capa.jsx -r public 
*/

import {Decal, useGLTF, useTexture} from '@react-three/drei'
import {CanvasTexture, MeshStandardMaterial} from "three";
import {useControls} from "leva";
import {useState} from "react";
import {degToRad} from "three/src/math/MathUtils.js";

interface IModel {
    color: string;
    message: string;
}



export function Capa({color, message}: IModel) {
    const {nodes} = useGLTF('/capa.glb');
    const [pos, setPos] = useState([-1, 3, 1]);
    const [rotation, setRotation] = useState([1, 0, 3.2]);
    const [scale, setScale] = useState([1, 1, 1]);

    useControls({
        angle: {
            min: degToRad(15),
            max:  degToRad(270),
            value: 0,
            step: 0.01,
            onChange: (value) => {
                const x = Math.cos(value);
                const z = Math.sin(value);
                const rotation = Math.atan2(x, z);
                setRotation(() => [0, rotation, 0]);
                setPos((pos) => [x, pos[1], z]);
            }
        }
    })

    const material = new MeshStandardMaterial({color: color});
    const texture = useTexture('/vite.svg')

    const canvas = document.createElement("canvas");
    const context = canvas.getContext("2d");
    if (context) {
        context.font = "Bold 40px Arial";
        context.fillStyle = 'white'; //
        context.fillText(message, 10, 50);
    }
    const textureText = new CanvasTexture(canvas);
    return (
        <group dispose={null}>
            <mesh geometry={nodes['16934_athletic_mouthguard'].geometry} material={material} rotation={[1.57, 0, 0]}>
                <Decal
                    debug
                    position={pos}
                    rotation={rotation}
                    scale={scale}
                >
                    <meshBasicMaterial

                        map={texture}
                        polygonOffset
                        polygonOffsetFactor={-1}/>
                </Decal>
                <Decal
                    debug
                    position={[1, 2, 0.2]}
                    rotation={[0, 0, 0]}
                    scale={[1, 1, 1]}
                >
                    <meshBasicMaterial
                        map={textureText}
                        polygonOffset
                        polygonOffsetFactor={-1}
                        transparent
                    />
                </Decal>
            </mesh>
        </group>
    )
}

useGLTF.preload('/capa.glb')
